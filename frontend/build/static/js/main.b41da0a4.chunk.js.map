{"version":3,"sources":["components/styled/Container.js","components/pages/error/Error.js","components/pages/homepage/Home.js","lib/auth.js","lib/headers.js","components/styled/StyledPlant.js","components/pages/index/plantCard/Plant.js","lib/waterAlert.js","components/pages/index/Index.js","components/styled/StyledNav.js","components/styled/StyledButton.js","components/styled/StyledModal.js","components/reusable/forms/ModalForm.js","components/reusable/common/Navbar.js","components/styled/StyledFooter.js","components/reusable/common/Footer.js","components/styled/GlobalStyle.js","components/styled/Wrapper.js","App.js","serviceWorker.js","index.js"],"names":["Container","styled","div","Error","Home","className","src","setToken","token","localStorage","setItem","getToken","getItem","logout","removeItem","isAuthenticated","payload","parts","split","length","JSON","parse","atob","getPayload","Math","round","Date","now","exp","headers","common","Cookies","get","Authorization","StyledPlant","Plant","plant","waterAlarm","plantLastWatered","waterFreq","lastWatered","moment","today","startOf","diff","duration","asDays","waterAlert","last_watered","water_frequency","data-testid","nickname","Index","state","data","getPlantsData","a","setState","props","history","push","componentDidMount","this","map","key","id","React","Component","StyledNav","nav","StyledButton","button","StyledModal","ModalForm","error","name","fields","handleChange","handleSubmit","onClose","aria-label","onClick","onSubmit","e","field","i","type","placeholder","charAt","toUpperCase","slice","onChange","Navbar","toggle","formName","toggleModal","value","target","navigate","url","preventDefault","toLowerCase","post","logoutNav","withRouter","StyledFooter","footer","Footer","GlobalStyle","createGlobalStyle","Wrapper","App","path","component","exact","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.b41da0a4.chunk.js","sourcesContent":["import styled from 'styled-components'\n\nconst Container = styled.div`\n  @import url('https://fonts.googleapis.com/css?family=Abril+Fatface|Raleway&display=swap');\n  font-family: 'Raleway' ;\n  min-height: 90vh;\n  background-color: #ebddca;\n\n  h1 {\n    font-family: 'Abril Fatface' ;\n    font-size:80px;\n    strong {\n      opacity: 0.7;\n    }\n  }\n\n  .flex {\n    display: flex;\n    margin-top: 50px;\n    div {\n      width: 50%;\n      display:flex;\n      flex-direction: column;\n      \n      align-items:center;\n    }\n  }\n\n  .flex-homepage {\n    text-align: right;\n    div {\n      justify-content: center;\n      img {\n        margin-right: 100px;\n        width: 60%;\n        border: 2px solid black;\n      }\n\n      h1 {\n        font-size: 180px;\n        line-height: 100px;\n      }\n    }\n  }\n\n  .flex-index {\n    div {\n      h1 {\n      font-size: 100px;\n      line-height: 60px;\n      margin: 50px;\n      strong {\n        padding-left: 20px;\n      }\n    }\n  }    \n\n  .plant-flex {\n    align-items: flex-end;\n    width: 100%;\n    padding: 50px;\n  }\n    \n`;\n\nexport default Container","import React from 'react'\nimport Container from './../../styled/Container'\n\nconst Error = () => {\n  return (\n    <Container>\n      <h1>Ooops..something went wrong</h1>\n    </Container>\n  )\n}\n\nexport default Error","import React from 'react'\nimport Container from './../../styled/Container'\n\nconst Home = () => {\n  return (\n    <Container>\n      <div className=\"flex flex-homepage\">\n        <div>\n          <img src=\"https://images.pexels.com/photos/1451471/pexels-photo-1451471.jpeg?auto=compress&cs=tinysrgb&h=750&w=1260\" />\n        </div>\n        <div>\n          <h1><strong>Plants</strong> <br /> Life</h1>\n        </div>\n      </div>\n    </Container>\n  )\n}\n\nexport default Home","export const setToken = (token) => {\n  localStorage.setItem('token', token)\n}\n\nexport const getToken = () => {\n  return localStorage.getItem('token')\n}\n\nexport const logout = () => {\n  localStorage.removeItem('token')\n}\n\nexport const getPayload = () => {\n  const token = getToken()\n  if (!token) return false\n  const parts = token.split('.')\n  if (parts.length < 3) return false\n  return JSON.parse(atob(parts[1]))\n}\n\nexport const isAuthenticated = () => {\n  const payload = getPayload()\n  const now = Math.round(Date.now() / 1000)\n  return now < payload.exp\n}\n\n","import Cookies from 'js-cookie'\nimport { getToken } from './../lib/auth'\nconst csrftoken = Cookies.get('csrftoken')\n\nexport const headers = {\n  common: {\n    'X-CSRF-TOKEN': csrftoken\n  },\n  headers: { Authorization: `Bearer ${getToken()}` }\n  \n}\n","import styled from 'styled-components';\n\n\nconst StyledPlant = styled.div`\n  background-color: #F2EBE4;\n  @import url('https://fonts.googleapis.com/css?family=Abril+Fatface|Raleway&display=swap');\n  font-family: 'Raleway' ;\n  width: 90%;\n  margin: 50px;\n  padding: 20px;\n  border: 2px solid black;\n  p {\n    text-align: right;\n    font-size: 35px;\n  }\n`;\n\nexport default StyledPlant;","import React from 'react'\nimport StyledPlant from '../../../styled/StyledPlant'\nimport { waterAlert } from '../../../../lib/waterAlert'\n\nconst Plant = ({plant}) => {\n  const waterAlarm = waterAlert(plant.last_watered, plant.water_frequency)\n  return (\n    <StyledPlant data-testid='plantContainer'>\n      <p>{plant.nickname}</p>\n      {\n        waterAlarm &&\n        <p data-testid='plantEmoji'>\n          {\n            waterAlarm === 'ok' && '🌿' \n          }\n          {\n            waterAlarm === 'water' && '🚰' \n          }\n          {\n            waterAlarm === 'danger' && '❗️' \n          }\n        </p>\n      }\n    </StyledPlant>\n  )\n}\n\nexport default Plant","import moment from 'moment'\n\nexport const waterAlert = (plantLastWatered, waterFreq) => {\n  const lastWatered = moment(plantLastWatered, \"YYYY-MM-DD\")\n  const today = moment().startOf('day')\n\n  //Difference in number of days\n  const diff = moment.duration(today.diff(lastWatered)).asDays()\n  //amount of days a plant can go without being watered\n  const days = waterFreq\n\n  if (diff < days - 1) {\n    return 'ok'\n  } else if (diff >= days - 1 && diff <= days + 1) {\n    return 'water'\n  } else if (diff > days + 1) {\n    return 'danger'\n  } else {\n    return null\n  }\n}\n","import React from 'react'\nimport Container from './../../styled/Container'\nimport { headers } from './../../../lib/headers'\nimport { get } from 'axios'\nimport Plant from './plantCard/Plant'\n\nclass Index extends React.Component {\n  state = {\n    data: []\n  }\n\n  getPlantsData = async() => {\n    try {\n      const { data } = await get('/api/plants', headers)\n      this.setState({ data })\n    } catch(err) {\n      this.props.history.push('/error')\n    }\n  }\n  componentDidMount = () => {\n    this.getPlantsData()\n  } \n\n  render() {\n    return (\n      <Container>\n        <div className='flex flex-index'>\n          <div>\n            <h1>My <br /><strong>Terranium</strong></h1>\n          </div>\n          <div className=\"plant-flex\">\n            {\n              this.state.data.map(plant => {\n                return <Plant key={plant.id} plant={plant}/>\n              })\n            }\n          </div>\n        </div>\n      </Container>\n    )\n  }\n}\n\nexport default Index","import styled from 'styled-components';\n\n\nconst StyledNav = styled.nav`\n  @import url('https://fonts.googleapis.com/css?family=Abril+Fatface|Raleway&display=swap');\n  font-family: 'Raleway' ;\n  font-size: 24px;\n  background-color: #ebddca;\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n  min-height: 15vh;\n  padding: 20px;\n`;\n\nexport default StyledNav;","import styled from 'styled-components';\n\nconst StyledButton = styled.button`\n  @import url('https://fonts.googleapis.com/css?family=Abril+Fatface|Raleway&display=swap');\n  font-family: 'Raleway' ;\n  font-size: 20px;\n  background-color: #ebddca;\n  border: 2px solid black;\n  padding: 10px;\n  margin: 20px;\n\n`;\n\nexport default StyledButton","import styled from 'styled-components';\n\n\nconst StyledModal = styled.div`\n  @import url('https://fonts.googleapis.com/css?family=Abril+Fatface|Raleway&display=swap');\n  \n  .modal-card-head, .modal-card-foot, .modal-card-body {\n    background-color: transparent;\n    border: none;\n  }\n\n  .modal-card-title {\n    color: #ebddca;\n    font-family: 'Raleway' ;\n    font-size: 40px;\n    font-weight:bold;\n  }\n\n  .input {\n    font-family: 'Raleway' ;\n    border-radius: 0;\n    font-size: 22px;\n    border: 2px solid black;\n  }\n\n  small {\n    color: red;\n  }\n`;\n\nexport default StyledModal;","import React from 'react'\nimport StyledButton from './../../styled/StyledButton'\nimport StyledModal from './../../styled/StyledModal'\n\nconst ModalForm = ({error, name, fields, handleChange, handleSubmit, onClose}) => {\n  return (\n    <StyledModal className=\"modal is-active\">\n      <div className=\"modal-background\"></div>\n      <div className=\"modal-card\">\n        <header className=\"modal-card-head\">\n          <p className=\"modal-card-title\">{name}</p>\n          <button className=\"delete\" aria-label=\"close\" onClick={onClose}></button>\n        </header>\n        <form onSubmit={(e) => handleSubmit(e, name)}>\n          <section className=\"modal-card-body\">\n              {\n                fields.map((field, i) => {\n                  return <div key={i} className=\"field\">\n                    <div className=\"control\">\n                      <input \n                        className=\"input\" \n                        type=\"text\" \n                        name={field}\n                        placeholder={field.charAt(0).toUpperCase() + field.slice(1)} \n                        onChange={handleChange}\n                        type={field === 'password' || field === 'password_confirmation' ? 'password' : 'text'}\n                        />\n                    </div>\n                  </div>\n                    \n                })\n              }\n          <small>{error}</small>\n          </section>\n          <footer className=\"modal-card-foot\">\n            <StyledButton type=\"submit\">Submit</StyledButton>\n            <StyledButton onClick={onClose}>Cancel</StyledButton>\n          </footer>\n        </form>\n      </div>\n    </StyledModal>\n  )\n}\n\nexport default ModalForm","import React from 'react'\nimport { post } from 'axios'\nimport { withRouter } from 'react-router-dom'\nimport StyledNav from './../../styled/StyledNav'\nimport StyledButton from '../../styled/StyledButton'\nimport ModalForm from '../forms/ModalForm'\nimport { headers } from './../../../lib/headers'\nimport { setToken, isAuthenticated, logout } from './../../../lib/auth'\n\nclass Navbar extends React.Component {\n  state = { \n    toggle: false, \n    fields: [], \n    formName: '',\n    data: {},\n    error: ''\n  }\n  \n  toggleModal = ({target: { value }}) => {\n    if(value) {\n      const fields = value === 'Login' ? ['email', 'password'] : ['username', 'email', 'password', 'password_confirmation']\n      this.setState({ toggle: !this.state.toggle, fields: fields, formName: value })\n    } else {\n      this.setState({ toggle: !this.state.toggle, fields: [], formName: '', data: {}, error: ''})\n    }\n  }\n\n  navigate = (url) => {\n    this.props.history.push(url)\n  }\n\n  handleSubmit = async (e, name) => {\n    e.preventDefault()\n    const url = `/api/${name.toLowerCase()}`\n    try {\n      const { data } = await post(url, this.state.data, headers)\n      if (name === 'Login') setToken(data.token)\n      this.toggleModal({ target: { value:'' } })\n      if (name === 'Login') this.navigate('/plants')\n    } catch(err) {\n      this.setState({ error: 'Invalid Crendentials' })\n    }\n  }\n\n  handleChange = ({ target: { name, value } }) => {\n    const data = { ...this.state.data, [name]: value }\n    this.setState({ data })\n  }\n\n  logoutNav = () => {\n    logout()\n    this.navigate('/')\n  }\n  \n  render() {\n    return (\n      <>\n        <StyledNav>\n          {\n            !isAuthenticated() &&\n            <>\n              <StyledButton value='Login' onClick={this.toggleModal}>\n                Login\n              </StyledButton>\n              <StyledButton value='Register' onClick={this.toggleModal}>\n                Register\n              </StyledButton>\n            </>\n          } \n          {\n            isAuthenticated() &&\n            <>\n              <StyledButton value='Homepage' onClick={() => this.navigate('/plants')}>\n                Homepage\n              </StyledButton>\n              <StyledButton value='Logout' onClick={this.logoutNav}>\n                Logout\n              </StyledButton>\n            </>\n          } \n        </StyledNav>\n        {\n          this.state.toggle &&\n          <ModalForm \n            error={this.state.error}\n            name={this.state.formName} \n            fields={this.state.fields} \n            onClose={this.toggleModal}\n            handleChange={this.handleChange}\n            handleSubmit={this.handleSubmit}\n          />\n        }\n      </>\n    )\n  }\n}\n\nexport default withRouter(Navbar)","import styled from 'styled-components';\n\n\nconst StyledFooter = styled.footer`\n  @import url('https://fonts.googleapis.com/css?family=Abril+Fatface|Raleway&display=swap');\n  font-family: 'Raleway' ;\n  font-size: 24px;\n  background-color: #ebddca;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 15vh;\n  padding: 20px;\n`;\n\nexport default StyledFooter;","import React from 'react'\nimport StyledFooter from './../../styled/StyledFooter'\n\nconst Footer = () => {\n  return (\n    <StyledFooter>Plants Life 🌱 Made by Mia</StyledFooter>\n  )\n}\n\nexport default Footer","import { createGlobalStyle } from 'styled-components'\n\nconst GlobalStyle = createGlobalStyle`\n  * {\n    box-sizing: border-box;\n    text-decoration: none;\n  }\n\n  html, body {\n    margin: 0px;\n  }\n\n  main {\n    min-height: 100vh;\n    color: black;\n  }\n`\n\nexport default GlobalStyle","import styled from 'styled-components';\n\n\nconst Wrapper = styled.div`\n  background-color: #ebddca;\n`;\n\nexport default Wrapper;","import React from 'react'\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\nimport 'bulma'\n\nimport Error from './components/pages/error/Error'\nimport Home from './components/pages/homepage/Home'\nimport Index from './components/pages/index/Index'\n\nimport Navbar from './components/reusable/common/Navbar'\nimport Footer from './components/reusable/common/Footer'\n\nimport GlobalStyle from './components/styled/GlobalStyle'\nimport Wrapper from './components/styled/Wrapper'\n\nconst App = () => {\n  return (\n    <BrowserRouter>\n      <GlobalStyle />\n      <Wrapper>\n        <Navbar />\n        <main>\n          <Switch>\n            <Route path=\"/plants\" component={Index} />\n            <Route exact path=\"/\" component={Home} />\n            <Route path='/*' component={Error} />\n          </Switch>\n        </main>\n        <Footer />\n      </Wrapper>\n      \n    </BrowserRouter>\n  )\n}\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './style.scss'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}